#version 400

uniform mat4 view_matrix;
uniform mat4 projection_matrix;
uniform mat4 model_matrix;
uniform vec3 view;
uniform int currentInterpolacion;
uniform int currentDifuso;
uniform int currentSpecular;

in vec3 position;
in vec2 coord_texturas;
in vec3 normal;

out vec3 FragPos;
out vec3 normales;
out vec3 viewPos;
out vec2 coordTex;
out float brillo;

void main()
{
   gl_Position = projection_matrix * view_matrix * model_matrix * vec4(position, 1.0);
   coordTex = coord_texturas;
   mat4 model = model_matrix;
   FragPos = vec3(model * vec4(position, 1.0));
   viewPos = view;
   normales = mat3(transpose(inverse(model))) * normal;
}